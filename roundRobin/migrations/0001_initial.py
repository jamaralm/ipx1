# Generated by Django 5.2.7 on 2025-10-23 12:46

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Nome de Usuario')),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('first_blood_wins', models.IntegerField(default=0)),
                ('farm_wins', models.IntegerField(default=0)),
                ('total_farm', models.IntegerField(default=0)),
                ('total_kills', models.IntegerField(default=0)),
                ('total_deaths', models.IntegerField(default=0)),
                ('total_win_time', models.DurationField(default=datetime.timedelta(0), help_text='Tempo total de vitória acumulado.')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('scheduled', 'Agendada'), ('live', 'Ao Vivo'), ('completed', 'Concluída')], db_index=True, default='scheduled', max_length=10)),
                ('round_number', models.IntegerField(choices=[(1, 'Rodada 1'), (2, 'Rodada 2'), (3, 'Rodada 3'), (4, 'Rodada 4'), (5, 'Rodada 5'), (6, 'Rodada 6'), (7, 'Rodada 7'), (8, 'Rodada 8'), (9, 'Rodada 9'), (10, 'Rodada 10')], db_index=True, default=1)),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='Horário Agendado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player1', to='roundRobin.player')),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player2', to='roundRobin.player')),
                ('series_winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='roundRobin.player', verbose_name='Vencedor da Série (MD3)')),
            ],
            options={
                'verbose_name': 'Confronto (MD3)',
                'verbose_name_plural': 'Confrontos (MD3)',
                'ordering': ['round_number', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField(choices=[(1, 'Jogo 1'), (2, 'Jogo 2'), (3, 'Jogo 3')], verbose_name='Nº do Jogo')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duração')),
                ('player1_farm', models.IntegerField(default=0)),
                ('player2_farm', models.IntegerField(default=0)),
                ('win_condition', models.CharField(blank=True, choices=[('first_blood', 'First Blood'), ('farm', 'Farm')], editable=False, max_length=20, null=True)),
                ('is_processed', models.BooleanField(default=False, editable=False)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='roundRobin.match')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='roundRobin.player')),
            ],
            options={
                'verbose_name': 'Partida (Jogo)',
                'verbose_name_plural': 'Partidas (Jogos)',
                'ordering': ['game_number'],
                'unique_together': {('match', 'game_number')},
            },
        ),
    ]
